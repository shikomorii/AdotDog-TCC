{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { hasOwnProperty } from '@react-native-firebase/app/lib/common';\nvar MAP = {\n  nan: 0,\n  '-infinity': 1,\n  infinity: 2,\n  null: 3,\n  documentid: 4,\n  booleanTrue: 5,\n  booleanFalse: 6,\n  double: 7,\n  string: 8,\n  stringEmpty: 9,\n  array: 10,\n  reference: 11,\n  geopoint: 12,\n  timestamp: 13,\n  blob: 14,\n  fieldvalue: 15,\n  object: 16,\n  integer: 17,\n  negativeZero: 18,\n  unknown: -999\n};\nvar MAP_ENTRIES = Object.entries(MAP);\nexport function getTypeMapInt(type) {\n  var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n  if (hasOwnProperty(MAP, type)) {\n    var array = [MAP[type]];\n    if (value !== undefined) {\n      array.push(value);\n    }\n    return array;\n  }\n  return null;\n}\nexport function getTypeMapName(value) {\n  for (var i = 0; i < MAP_ENTRIES.length; i++) {\n    var _MAP_ENTRIES$i = _slicedToArray(MAP_ENTRIES[i], 2),\n      name = _MAP_ENTRIES$i[0],\n      int = _MAP_ENTRIES$i[1];\n    if (value === int) {\n      return name;\n    }\n  }\n  return null;\n}","map":{"version":3,"names":["hasOwnProperty","MAP","nan","infinity","null","documentid","booleanTrue","booleanFalse","double","string","stringEmpty","array","reference","geopoint","timestamp","blob","fieldvalue","object","integer","negativeZero","unknown","MAP_ENTRIES","Object","entries","getTypeMapInt","type","value","arguments","length","undefined","push","getTypeMapName","i","_MAP_ENTRIES$i","_slicedToArray","name","int"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/node_modules/@react-native-firebase/firestore/lib/utils/typemap.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { hasOwnProperty } from '@react-native-firebase/app/lib/common';\n\nconst MAP = {\n  nan: 0,\n  '-infinity': 1,\n  infinity: 2,\n  null: 3,\n  documentid: 4, // to native only\n  booleanTrue: 5,\n  booleanFalse: 6,\n  double: 7,\n  string: 8,\n  stringEmpty: 9,\n  array: 10,\n  reference: 11,\n  geopoint: 12,\n  timestamp: 13,\n  blob: 14,\n  fieldvalue: 15,\n  object: 16,\n  integer: 17,\n  negativeZero: 18,\n  unknown: -999,\n};\n\nconst MAP_ENTRIES = Object.entries(MAP);\n\n/**\n * Returns the array map with value for a given type\n * @param type\n * @param value\n * @returns {null|*[]}\n */\nexport function getTypeMapInt(type, value = undefined) {\n  if (hasOwnProperty(MAP, type)) {\n    const array = [MAP[type]];\n    if (value !== undefined) {\n      array.push(value);\n    }\n    return array;\n  }\n\n  return null;\n}\n\n/**\n * Returns the type of a given int value\n * @param value\n * @returns {null}\n */\nexport function getTypeMapName(value) {\n  for (let i = 0; i < MAP_ENTRIES.length; i++) {\n    const [name, int] = MAP_ENTRIES[i];\n    if (value === int) {\n      return name;\n    }\n  }\n\n  return null;\n}\n"],"mappings":";AAiBA,SAASA,cAAc,QAAQ,uCAAuC;AAEtE,IAAMC,GAAG,GAAG;EACVC,GAAG,EAAE,CAAC;EACN,WAAW,EAAE,CAAC;EACdC,QAAQ,EAAE,CAAC;EACXC,IAAI,EAAE,CAAC;EACPC,UAAU,EAAE,CAAC;EACbC,WAAW,EAAE,CAAC;EACdC,YAAY,EAAE,CAAC;EACfC,MAAM,EAAE,CAAC;EACTC,MAAM,EAAE,CAAC;EACTC,WAAW,EAAE,CAAC;EACdC,KAAK,EAAE,EAAE;EACTC,SAAS,EAAE,EAAE;EACbC,QAAQ,EAAE,EAAE;EACZC,SAAS,EAAE,EAAE;EACbC,IAAI,EAAE,EAAE;EACRC,UAAU,EAAE,EAAE;EACdC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,EAAE;EACXC,YAAY,EAAE,EAAE;EAChBC,OAAO,EAAE,CAAC;AACZ,CAAC;AAED,IAAMC,WAAW,GAAGC,MAAM,CAACC,OAAO,CAACtB,GAAG,CAAC;AAQvC,OAAO,SAASuB,aAAaA,CAACC,IAAI,EAAqB;EAAA,IAAnBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;EACnD,IAAI7B,cAAc,CAACC,GAAG,EAAEwB,IAAI,CAAC,EAAE;IAC7B,IAAMd,KAAK,GAAG,CAACV,GAAG,CAACwB,IAAI,CAAC,CAAC;IACzB,IAAIC,KAAK,KAAKG,SAAS,EAAE;MACvBlB,KAAK,CAACmB,IAAI,CAACJ,KAAK,CAAC;IACnB;IACA,OAAOf,KAAK;EACd;EAEA,OAAO,IAAI;AACb;AAOA,OAAO,SAASoB,cAAcA,CAACL,KAAK,EAAE;EACpC,KAAK,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,WAAW,CAACO,MAAM,EAAEI,CAAC,EAAE,EAAE;IAC3C,IAAAC,cAAA,GAAAC,cAAA,CAAoBb,WAAW,CAACW,CAAC,CAAC;MAA3BG,IAAI,GAAAF,cAAA;MAAEG,GAAG,GAAAH,cAAA;IAChB,IAAIP,KAAK,KAAKU,GAAG,EAAE;MACjB,OAAOD,IAAI;IACb;EACF;EAEA,OAAO,IAAI;AACb"},"metadata":{},"sourceType":"module","externalDependencies":[]}