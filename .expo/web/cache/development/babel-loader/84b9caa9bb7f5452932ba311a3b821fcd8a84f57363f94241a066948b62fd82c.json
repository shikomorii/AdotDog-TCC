{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { getFirestore, collection, addDoc } from 'firebase/firestore';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { firebaseConfig } from 'path-to-your-firebase-config';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfirebase.initializeApp(firebaseConfig);\nvar PostScreen = function PostScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    description = _useState2[0],\n    setDescription = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    phone = _useState4[0],\n    setPhone = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    city = _useState6[0],\n    setCity = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    imageUri = _useState8[0],\n    setImageUri = _useState8[1];\n  var handlePost = function () {\n    var _ref = _asyncToGenerator(function* () {\n      if (description && phone && city && imageUri) {\n        try {\n          var db = getFirestore();\n          var auth = getAuth();\n          var newUserCredentials = yield createUserWithEmailAndPassword(auth, email, password);\n          if (!newUserCredentials.user) {\n            showMessage('Erro ao criar usuário.');\n            return;\n          }\n          var user = newUserCredentials.user;\n          yield addDoc(collection(db, 'adotdog-auth'), {\n            userId: user.uid,\n            description: description,\n            phone: phone,\n            city: city,\n            imageUrl: imageUri\n          });\n          showMessage('Cachorro cadastrado com sucesso!');\n          setDescription('');\n          setPhone('');\n          setCity('');\n          setImageUri(null);\n        } catch (error) {\n          console.error('Erro ao cadastrar cachorro', error);\n          showMessage('Erro ao cadastrar cachorro.');\n        }\n      } else {\n        showMessage('Preencha todos os campos.');\n      }\n    });\n    return function handlePost() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var pickImage = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      var permissionResult = yield ImagePicker.requestMediaLibraryPermissionsAsync();\n      if (!permissionResult.granted) {\n        showMessage('Permissão para acessar a galeria negada.');\n        return;\n      }\n      var imagePickerResult = yield ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1\n      });\n      if (!imagePickerResult.cancelled) {\n        setImageUri(imagePickerResult.uri);\n      }\n    });\n    return function pickImage() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var showMessage = function showMessage(message) {\n    Alert.alert('Mensagem', message);\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [imageUri && _jsx(Image, {\n      source: {\n        uri: imageUri\n      },\n      style: styles.image\n    }), _jsxs(TouchableOpacity, {\n      style: styles.uploadButton,\n      onPress: pickImage,\n      children: [_jsx(MaterialCommunityIcons, {\n        name: \"camera\",\n        size: 24,\n        color: \"#fff\"\n      }), _jsx(Text, {\n        style: styles.uploadButtonText,\n        children: \"Upload Image\"\n      })]\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Description\",\n      value: description,\n      onChangeText: setDescription,\n      placeholderTextColor: \"#fff\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"Phone Number\",\n      value: phone,\n      onChangeText: setPhone,\n      keyboardType: \"numeric\",\n      placeholderTextColor: \"#fff\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      placeholder: \"City\",\n      value: city,\n      onChangeText: setCity,\n      placeholderTextColor: \"#fff\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.postButton,\n      onPress: handlePost,\n      children: _jsx(Text, {\n        style: styles.postButtonText,\n        children: \"Post\"\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#000',\n    paddingHorizontal: 20\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginBottom: 20,\n    borderRadius: 5\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    backgroundColor: '#007BFF',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 20,\n    alignItems: 'center'\n  },\n  uploadButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    marginLeft: 5\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 10,\n    width: '100%',\n    marginBottom: 20,\n    color: '#fff',\n    borderRadius: 5\n  },\n  postButton: {\n    backgroundColor: '#28A745',\n    padding: 10,\n    borderRadius: 5,\n    width: '100%',\n    alignItems: 'center'\n  },\n  postButtonText: {\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});\nexport default PostScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","TextInput","StyleSheet","Image","Alert","useNavigation","MaterialCommunityIcons","ImagePicker","getFirestore","collection","addDoc","getAuth","createUserWithEmailAndPassword","firebaseConfig","jsx","_jsx","jsxs","_jsxs","firebase","initializeApp","PostScreen","navigation","_useState","_useState2","_slicedToArray","description","setDescription","_useState3","_useState4","phone","setPhone","_useState5","_useState6","city","setCity","_useState7","_useState8","imageUri","setImageUri","handlePost","_ref","_asyncToGenerator","db","auth","newUserCredentials","email","password","user","showMessage","userId","uid","imageUrl","error","console","apply","arguments","pickImage","_ref2","permissionResult","requestMediaLibraryPermissionsAsync","granted","imagePickerResult","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","quality","cancelled","uri","message","alert","style","styles","container","children","source","image","uploadButton","onPress","name","size","color","uploadButtonText","input","placeholder","value","onChangeText","placeholderTextColor","keyboardType","postButton","postButtonText","create","flex","justifyContent","alignItems","backgroundColor","paddingHorizontal","width","height","marginBottom","borderRadius","flexDirection","padding","fontWeight","marginLeft","borderWidth","borderColor"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  TextInput,\n  StyleSheet,\n  Image,\n  Alert,\n} from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\nimport * as ImagePicker from 'expo-image-picker';\nimport { getFirestore, collection, addDoc } from 'firebase/firestore'; // Importe as funções necessárias do Firebase\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { firebaseConfig } from 'path-to-your-firebase-config'; // Importe a configuração do Firebase correta\n\n// Inicialize o Firebase com a configuração\nfirebase.initializeApp(firebaseConfig);\n\nconst PostScreen = () => {\n  const navigation = useNavigation();\n  const [description, setDescription] = useState('');\n  const [phone, setPhone] = useState('');\n  const [city, setCity] = useState('');\n  const [imageUri, setImageUri] = useState(null);\n\n  const handlePost = async () => {\n    if (description && phone && city && imageUri) {\n      try {\n        const db = getFirestore();\n        const auth = getAuth();\n\n        // Substitua \"email\" e \"password\" com os valores corretos\n        const newUserCredentials = await createUserWithEmailAndPassword(auth, email, password);\n\n        if (!newUserCredentials.user) {\n          showMessage('Erro ao criar usuário.');\n          return;\n        }\n\n        const user = newUserCredentials.user;\n\n        // Adicione as informações do cachorro no banco de dados\n        await addDoc(collection(db, 'adotdog-auth'), {\n          userId: user.uid,\n          description: description,\n          phone: phone,\n          city: city,\n          imageUrl: imageUri,\n        });\n\n        showMessage('Cachorro cadastrado com sucesso!');\n        setDescription('');\n        setPhone('');\n        setCity('');\n        setImageUri(null);\n      } catch (error) {\n        console.error('Erro ao cadastrar cachorro', error);\n        showMessage('Erro ao cadastrar cachorro.');\n      }\n    } else {\n      showMessage('Preencha todos os campos.');\n    }\n  };\n\n  const pickImage = async () => {\n    const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\n\n    if (!permissionResult.granted) {\n      showMessage('Permissão para acessar a galeria negada.');\n      return;\n    }\n\n    const imagePickerResult = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      allowsEditing: true,\n      aspect: [4, 3],\n      quality: 1,\n    });\n\n    if (!imagePickerResult.cancelled) {\n      setImageUri(imagePickerResult.uri);\n    }\n  };\n\n  const showMessage = (message) => {\n    Alert.alert('Mensagem', message);\n  };\n\n  return (\n    <View style={styles.container}>\n      {imageUri && <Image source={{ uri: imageUri }} style={styles.image} />}\n\n      <TouchableOpacity style={styles.uploadButton} onPress={pickImage}>\n        <MaterialCommunityIcons name=\"camera\" size={24} color=\"#fff\" />\n        <Text style={styles.uploadButtonText}>Upload Image</Text>\n      </TouchableOpacity>\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Description\"\n        value={description}\n        onChangeText={setDescription}\n        placeholderTextColor=\"#fff\"\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Phone Number\"\n        value={phone}\n        onChangeText={setPhone}\n        keyboardType=\"numeric\"\n        placeholderTextColor=\"#fff\"\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"City\"\n        value={city}\n        onChangeText={setCity}\n        placeholderTextColor=\"#fff\"\n      />\n\n      <TouchableOpacity style={styles.postButton} onPress={handlePost}>\n        <Text style={styles.postButtonText}>Post</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#000',\n    paddingHorizontal: 20,\n  },\n  image: {\n    width: 200,\n    height: 200,\n    marginBottom: 20,\n    borderRadius: 5,\n  },\n  uploadButton: {\n    flexDirection: 'row',\n    backgroundColor: '#007BFF',\n    padding: 10,\n    borderRadius: 5,\n    marginBottom: 20,\n    alignItems: 'center',\n  },\n  uploadButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    marginLeft: 5,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: 'gray',\n    padding: 10,\n    width: '100%',\n    marginBottom: 20,\n    color: '#fff',\n    borderRadius: 5,\n  },\n  postButton: {\n    backgroundColor: '#28A745',\n    padding: 10,\n    borderRadius: 5,\n    width: '100%',\n    alignItems: 'center',\n  },\n  postButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n});\n\nexport default PostScreen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}