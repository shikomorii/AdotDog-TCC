{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport FirestoreDocumentSnapshot from \"./FirestoreDocumentSnapshot\";\nvar TYPE_MAP = {\n  a: 'added',\n  m: 'modified',\n  r: 'removed'\n};\nvar FirestoreDocumentChange = function () {\n  function FirestoreDocumentChange(firestore, nativeData) {\n    _classCallCheck(this, FirestoreDocumentChange);\n    this._firestore = firestore;\n    this._nativeData = nativeData;\n    this._isMetadataChange = nativeData.isMetadataChange;\n  }\n  _createClass(FirestoreDocumentChange, [{\n    key: \"doc\",\n    get: function get() {\n      return new FirestoreDocumentSnapshot(this._firestore, this._nativeData.doc);\n    }\n  }, {\n    key: \"newIndex\",\n    get: function get() {\n      return this._nativeData.ni;\n    }\n  }, {\n    key: \"oldIndex\",\n    get: function get() {\n      return this._nativeData.oi;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return TYPE_MAP[this._nativeData.type];\n    }\n  }]);\n  return FirestoreDocumentChange;\n}();\nexport { FirestoreDocumentChange as default };","map":{"version":3,"names":["FirestoreDocumentSnapshot","TYPE_MAP","a","m","r","FirestoreDocumentChange","firestore","nativeData","_classCallCheck","_firestore","_nativeData","_isMetadataChange","isMetadataChange","_createClass","key","get","doc","ni","oi","type","default"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/node_modules/@react-native-firebase/firestore/lib/FirestoreDocumentChange.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport FirestoreDocumentSnapshot from './FirestoreDocumentSnapshot';\n\nconst TYPE_MAP = {\n  a: 'added',\n  m: 'modified',\n  r: 'removed',\n};\n\nexport default class FirestoreDocumentChange {\n  constructor(firestore, nativeData) {\n    this._firestore = firestore;\n    this._nativeData = nativeData;\n    this._isMetadataChange = nativeData.isMetadataChange;\n  }\n\n  get doc() {\n    return new FirestoreDocumentSnapshot(this._firestore, this._nativeData.doc);\n  }\n\n  get newIndex() {\n    return this._nativeData.ni;\n  }\n\n  get oldIndex() {\n    return this._nativeData.oi;\n  }\n\n  get type() {\n    return TYPE_MAP[this._nativeData.type];\n  }\n}\n"],"mappings":";;AAiBA,OAAOA,yBAAyB;AAEhC,IAAMC,QAAQ,GAAG;EACfC,CAAC,EAAE,OAAO;EACVC,CAAC,EAAE,UAAU;EACbC,CAAC,EAAE;AACL,CAAC;AAAC,IAEmBC,uBAAuB;EAC1C,SAAAA,wBAAYC,SAAS,EAAEC,UAAU,EAAE;IAAAC,eAAA,OAAAH,uBAAA;IACjC,IAAI,CAACI,UAAU,GAAGH,SAAS;IAC3B,IAAI,CAACI,WAAW,GAAGH,UAAU;IAC7B,IAAI,CAACI,iBAAiB,GAAGJ,UAAU,CAACK,gBAAgB;EACtD;EAACC,YAAA,CAAAR,uBAAA;IAAAS,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAU;MACR,OAAO,IAAIf,yBAAyB,CAAC,IAAI,CAACS,UAAU,EAAE,IAAI,CAACC,WAAW,CAACM,GAAG,CAAC;IAC7E;EAAC;IAAAF,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAACL,WAAW,CAACO,EAAE;IAC5B;EAAC;IAAAH,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAe;MACb,OAAO,IAAI,CAACL,WAAW,CAACQ,EAAE;IAC5B;EAAC;IAAAJ,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAW;MACT,OAAOd,QAAQ,CAAC,IAAI,CAACS,WAAW,CAACS,IAAI,CAAC;IACxC;EAAC;EAAA,OAAAd,uBAAA;AAAA;AAAA,SArBkBA,uBAAuB,IAAAe,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}