{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n  var _super = _createSuper(ChatScreen);\n  function ChatScreen(props) {\n    var _this;\n    _classCallCheck(this, ChatScreen);\n    _this = _super.call(this, props);\n    _this.handleInputChange = function (text) {\n      _this.setState({\n        newMessage: text\n      });\n    };\n    _this.handleSubmit = _asyncToGenerator(function* () {\n      var newMessage = _this.state.newMessage;\n      if (newMessage.trim() !== '') {\n        var userEmail = _this.props.route.params.userEmail;\n        var messageData = {\n          text: newMessage,\n          sender: userEmail,\n          timestamp: new Date().getTime()\n        };\n        try {\n          var messagesRef = firebase.firestore().collection('messages');\n          yield messagesRef.add(messageData);\n          _this.setState({\n            newMessage: ''\n          });\n        } catch (error) {\n          console.error('Erro ao enviar a mensagem:', error);\n        }\n      }\n    });\n    _this.state = {\n      messages: [],\n      newMessage: ''\n    };\n    return _this;\n  }\n  _createClass(ChatScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n      var userEmail = this.props.route.params.userEmail;\n      var messagesRef = firebase.firestore().collection('messages');\n      this.unsubscribe = messagesRef.orderBy('timestamp').onSnapshot(function (querySnapshot) {\n        var newMessages = [];\n        querySnapshot.forEach(function (doc) {\n          var message = doc.data();\n          newMessages.push(message);\n        });\n        _this2.setState({\n          messages: newMessages\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n        messages = _this$state.messages,\n        newMessage = _this$state.newMessage;\n      var route = this.props.route;\n      var userEmail = route.params.userEmail;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.headerText,\n            children: \"Conversando com:\"\n          }), _jsx(Text, {\n            style: styles.username,\n            children: userEmail\n          })]\n        }), _jsx(FlatList, {\n          data: messages,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item,\n              index = _ref2.index;\n            return _jsx(View, {\n              style: [styles.message, {\n                backgroundColor: '#007AFF'\n              }, index % 2 === 0 ? styles.evenMessage : styles.oddMessage],\n              children: _jsx(Text, {\n                style: [styles.messageText, {\n                  color: '#fff'\n                }],\n                children: item.text\n              })\n            });\n          }\n        }), _jsxs(View, {\n          style: styles.messageInputContainer,\n          children: [_jsx(TextInput, {\n            style: styles.messageInput,\n            value: newMessage,\n            onChangeText: this.handleInputChange,\n            placeholder: \"Digite sua mensagem...\",\n            placeholderTextColor: \"#888\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.sendButton,\n            onPress: this.handleSubmit,\n            children: _jsx(Text, {\n              style: styles.sendButtonText,\n              children: \"Enviar\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n  return ChatScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  message: {\n    padding: 10,\n    marginVertical: 5,\n    borderRadius: 10,\n    maxWidth: '70%',\n    alignSelf: 'flex-end'\n  },\n  evenMessage: {\n    alignSelf: 'flex-end'\n  },\n  oddMessage: {\n    alignSelf: 'flex-end'\n  },\n  messageText: {\n    fontSize: 16\n  },\n  messageInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  messageInput: {\n    flex: 1,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#555',\n    borderRadius: 10,\n    marginRight: 10,\n    paddingHorizontal: 10,\n    color: '#fff'\n  },\n  sendButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 20\n  },\n  sendButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  header: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16\n  },\n  headerText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  username: {\n    fontSize: 19,\n    marginTop: 8,\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","Component","View","Text","StyleSheet","TextInput","TouchableOpacity","FlatList","firebase","jsx","_jsx","jsxs","_jsxs","ChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleInputChange","text","setState","newMessage","handleSubmit","_asyncToGenerator","state","trim","userEmail","route","params","messageData","sender","timestamp","Date","getTime","messagesRef","firestore","collection","add","error","console","messages","_createClass","key","value","componentDidMount","_this2","unsubscribe","orderBy","onSnapshot","querySnapshot","newMessages","forEach","doc","message","data","push","componentWillUnmount","render","_this$state","style","styles","container","children","header","headerText","username","keyExtractor","item","index","toString","renderItem","_ref2","backgroundColor","evenMessage","oddMessage","messageText","color","messageInputContainer","messageInput","onChangeText","placeholder","placeholderTextColor","sendButton","onPress","sendButtonText","create","flex","padding","marginVertical","borderRadius","maxWidth","alignSelf","fontSize","flexDirection","alignItems","height","borderWidth","borderColor","marginRight","paddingHorizontal","paddingVertical","fontWeight","justifyContent","marginTop"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/src/ChatScreen.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, FlatList } from 'react-native';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      newMessage: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { userEmail } = this.props.route.params;\r\n\r\n    // Referência à coleção \"messages\" no Firestore\r\n    const messagesRef = firebase.firestore().collection('messages');\r\n\r\n    // Assinar para receber atualizações em tempo real\r\n    this.unsubscribe = messagesRef\r\n      .orderBy('timestamp')\r\n      .onSnapshot((querySnapshot) => {\r\n        const newMessages = [];\r\n\r\n        querySnapshot.forEach((doc) => {\r\n          const message = doc.data();\r\n          newMessages.push(message);\r\n        });\r\n\r\n        // Atualizar o estado com as novas mensagens\r\n        this.setState({ messages: newMessages });\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Cancelar a assinatura do ouvinte quando o componente for desmontado\r\n    if (this.unsubscribe) {\r\n      this.unsubscribe();\r\n    }\r\n  }\r\n\r\n  handleInputChange = (text) => {\r\n    this.setState({ newMessage: text });\r\n  };\r\n\r\n  handleSubmit = async () => {\r\n    const { newMessage } = this.state;\r\n    if (newMessage.trim() !== '') {\r\n      const { userEmail } = this.props.route.params;\r\n\r\n      // Enviar a mensagem para o Firestore\r\n      const messageData = {\r\n        text: newMessage,\r\n        sender: userEmail,\r\n        timestamp: new Date().getTime(),\r\n      };\r\n\r\n      try {\r\n        // Referência à coleção \"messages\" no Firestore\r\n        const messagesRef = firebase.firestore().collection('messages');\r\n        await messagesRef.add(messageData);\r\n\r\n        // Limpar o campo de entrada\r\n        this.setState({ newMessage: '' });\r\n      } catch (error) {\r\n        console.error('Erro ao enviar a mensagem:', error);\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { messages, newMessage } = this.state;\r\n    const { route } = this.props;\r\n    const { userEmail } = route.params; // Recebe o email do usuário com quem está conversando da rota\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.headerText}>Conversando com:</Text>\r\n          <Text style={styles.username}>{userEmail}</Text>\r\n        </View>\r\n\r\n        <FlatList\r\n          data={messages}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          renderItem={({ item, index }) => (\r\n            <View\r\n              style={[\r\n                styles.message,\r\n                { backgroundColor: '#007AFF' },\r\n                index % 2 === 0 ? styles.evenMessage : styles.oddMessage,\r\n              ]}\r\n            >\r\n              <Text style={[styles.messageText, { color: '#fff' }]}>\r\n                {item.text}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        />\r\n\r\n        <View style={styles.messageInputContainer}>\r\n          <TextInput\r\n            style={styles.messageInput}\r\n            value={newMessage}\r\n            onChangeText={this.handleInputChange}\r\n            placeholder=\"Digite sua mensagem...\"\r\n            placeholderTextColor=\"#888\"\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.sendButton}\r\n            onPress={this.handleSubmit}\r\n          >\r\n            <Text style={styles.sendButtonText}>Enviar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  message: {\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    borderRadius: 10,\r\n    maxWidth: '70%',\r\n    alignSelf: 'flex-end',\r\n  },\r\n  evenMessage: {\r\n    alignSelf: 'flex-end',\r\n  },\r\n  oddMessage: {\r\n    alignSelf: 'flex-end',\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n  },\r\n  messageInputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  messageInput: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#555',\r\n    borderRadius: 10,\r\n    marginRight: 10,\r\n    paddingHorizontal: 10,\r\n    color: '#fff',\r\n  },\r\n  sendButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 20,\r\n  },\r\n  sendButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  headerText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n  username: {\r\n    fontSize: 19,\r\n    marginTop: 8,\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default ChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}