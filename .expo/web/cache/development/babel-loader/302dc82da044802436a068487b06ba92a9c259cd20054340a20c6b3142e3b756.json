{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ChatScreen = function (_Component) {\n  _inherits(ChatScreen, _Component);\n  var _super = _createSuper(ChatScreen);\n  function ChatScreen(props) {\n    var _this;\n    _classCallCheck(this, ChatScreen);\n    _this = _super.call(this, props);\n    _this.handleInputChange = function (text) {\n      _this.setState({\n        newMessage: text\n      });\n    };\n    _this.handleSubmit = function () {\n      var _this$state = _this.state,\n        messages = _this$state.messages,\n        newMessage = _this$state.newMessage;\n      if (newMessage.trim() !== '') {\n        var userEmail = _this.props.route.params.userEmail;\n        var updatedMessages = [].concat(_toConsumableArray(messages), [{\n          text: newMessage,\n          isUser: true,\n          sender: userEmail\n        }]);\n        _this.setState({\n          messages: updatedMessages,\n          newMessage: ''\n        });\n      }\n    };\n    _this.state = {\n      messages: [],\n      newMessage: ''\n    };\n    return _this;\n  }\n  _createClass(ChatScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n        messages = _this$state2.messages,\n        newMessage = _this$state2.newMessage;\n      var route = this.props.route;\n      var userEmail = route.params.userEmail;\n      return _jsxs(View, {\n        style: styles.container,\n        children: [_jsxs(View, {\n          style: styles.header,\n          children: [_jsx(Text, {\n            style: styles.headerText,\n            children: \"Conversando com:\"\n          }), _jsx(Text, {\n            style: styles.username,\n            children: userEmail\n          })]\n        }), _jsx(FlatList, {\n          data: messages,\n          keyExtractor: function keyExtractor(item, index) {\n            return index.toString();\n          },\n          renderItem: function renderItem(_ref) {\n            var item = _ref.item,\n              index = _ref.index;\n            return _jsx(View, {\n              style: [styles.message, {\n                backgroundColor: '#007AFF'\n              }, index % 2 === 0 ? styles.evenMessage : styles.oddMessage],\n              children: _jsx(Text, {\n                style: [styles.messageText, {\n                  color: '#fff'\n                }],\n                children: item.text\n              })\n            });\n          }\n        }), _jsxs(View, {\n          style: styles.messageInputContainer,\n          children: [_jsx(TextInput, {\n            style: styles.messageInput,\n            value: newMessage,\n            onChangeText: this.handleInputChange,\n            placeholder: \"Digite sua mensagem...\",\n            placeholderTextColor: \"#888\"\n          }), _jsx(TouchableOpacity, {\n            style: styles.sendButton,\n            onPress: this.handleSubmit,\n            children: _jsx(Text, {\n              style: styles.sendButtonText,\n              children: \"Enviar\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n  return ChatScreen;\n}(Component);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000'\n  },\n  message: {\n    padding: 10,\n    marginVertical: 5,\n    borderRadius: 10,\n    maxWidth: '70%',\n    alignSelf: 'flex-end'\n  },\n  evenMessage: {\n    alignSelf: 'flex-end'\n  },\n  oddMessage: {\n    alignSelf: 'flex-end'\n  },\n  messageText: {\n    fontSize: 16\n  },\n  messageInputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  messageInput: {\n    flex: 1,\n    height: 40,\n    borderWidth: 1,\n    borderColor: '#555',\n    borderRadius: 10,\n    marginRight: 10,\n    paddingHorizontal: 10,\n    color: '#fff'\n  },\n  sendButton: {\n    backgroundColor: '#007AFF',\n    borderRadius: 10,\n    paddingVertical: 8,\n    paddingHorizontal: 20\n  },\n  sendButtonText: {\n    color: '#fff',\n    fontWeight: 'bold',\n    fontSize: 16\n  },\n  header: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 16\n  },\n  headerText: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  username: {\n    fontSize: 19,\n    marginTop: 8,\n    color: '#fff',\n    fontWeight: 'bold'\n  }\n});\nexport default ChatScreen;","map":{"version":3,"names":["React","Component","View","Text","StyleSheet","TextInput","TouchableOpacity","FlatList","jsx","_jsx","jsxs","_jsxs","ChatScreen","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","handleInputChange","text","setState","newMessage","handleSubmit","_this$state","state","messages","trim","userEmail","route","params","updatedMessages","concat","_toConsumableArray","isUser","sender","_createClass","key","value","render","_this$state2","style","styles","container","children","header","headerText","username","data","keyExtractor","item","index","toString","renderItem","_ref","message","backgroundColor","evenMessage","oddMessage","messageText","color","messageInputContainer","messageInput","onChangeText","placeholder","placeholderTextColor","sendButton","onPress","sendButtonText","create","flex","padding","marginVertical","borderRadius","maxWidth","alignSelf","fontSize","flexDirection","alignItems","height","borderWidth","borderColor","marginRight","paddingHorizontal","paddingVertical","fontWeight","justifyContent","marginTop"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/src/ChatScreen.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport { View, Text, StyleSheet, TextInput, TouchableOpacity, FlatList } from 'react-native';\r\n\r\nclass ChatScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      messages: [],\r\n      newMessage: '',\r\n    };\r\n  }\r\n\r\n  handleInputChange = (text) => {\r\n    this.setState({ newMessage: text });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    const { messages, newMessage } = this.state;\r\n    if (newMessage.trim() !== '') {\r\n      const { userEmail } = this.props.route.params;\r\n      const updatedMessages = [...messages, { text: newMessage, isUser: true, sender: userEmail }];\r\n      this.setState({ messages: updatedMessages, newMessage: '' });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { messages, newMessage } = this.state;\r\n    const { route } = this.props;\r\n    const { userEmail } = route.params; // Recebe o email do usuário com quem está conversando da rota\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.headerText}>Conversando com:</Text>\r\n          <Text style={styles.username}>{userEmail}</Text>\r\n        </View>\r\n\r\n        <FlatList\r\n          data={messages}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          renderItem={({ item, index }) => (\r\n            <View\r\n              style={[\r\n                styles.message,\r\n                { backgroundColor: '#007AFF' },\r\n                index % 2 === 0 ? styles.evenMessage : styles.oddMessage,\r\n              ]}\r\n            >\r\n              <Text style={[styles.messageText, { color: '#fff' }]}>\r\n                {item.text}\r\n              </Text>\r\n            </View>\r\n          )}\r\n        />\r\n\r\n        <View style={styles.messageInputContainer}>\r\n          <TextInput\r\n            style={styles.messageInput}\r\n            value={newMessage}\r\n            onChangeText={this.handleInputChange}\r\n            placeholder=\"Digite sua mensagem...\"\r\n            placeholderTextColor=\"#888\"\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.sendButton}\r\n            onPress={this.handleSubmit}\r\n          >\r\n            <Text style={styles.sendButtonText}>Enviar</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#000',\r\n  },\r\n  message: {\r\n    padding: 10,\r\n    marginVertical: 5,\r\n    borderRadius: 10,\r\n    maxWidth: '70%',\r\n    alignSelf: 'flex-end',\r\n  },\r\n  evenMessage: {\r\n    alignSelf: 'flex-end', // Alterado para \"flex-end\"\r\n  },\r\n  oddMessage: {\r\n    alignSelf: 'flex-end', // Alterado para \"flex-end\"\r\n  },\r\n  messageText: {\r\n    fontSize: 16,\r\n  },\r\n  messageInputContainer: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  messageInput: {\r\n    flex: 1,\r\n    height: 40,\r\n    borderWidth: 1,\r\n    borderColor: '#555',\r\n    borderRadius: 10,\r\n    marginRight: 10,\r\n    paddingHorizontal: 10,\r\n    color: '#fff',\r\n  },\r\n  sendButton: {\r\n    backgroundColor: '#007AFF',\r\n    borderRadius: 10,\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 20,\r\n  },\r\n  sendButtonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n    fontSize: 16,\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 16,\r\n  },\r\n  headerText: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#fff',\r\n  },\r\n  username: {\r\n    fontSize: 19,\r\n    marginTop: 8,\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default ChatScreen;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}