{"ast":null,"code":"import { isFunction } from \"./validate\";\nexport function promiseDefer() {\n  var deferred = {\n    resolve: null,\n    reject: null\n  };\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\nexport function promiseWithOptionalCallback(promise, callback) {\n  if (!isFunction(callback)) {\n    return promise;\n  }\n  return promise.then(function (result) {\n    if (callback && callback.length === 1) {\n      callback(null);\n    } else if (callback) {\n      callback(null, result);\n    }\n    return result;\n  }).catch(function (error) {\n    if (callback) {\n      callback(error);\n    }\n    return Promise.reject(error);\n  });\n}","map":{"version":3,"names":["isFunction","promiseDefer","deferred","resolve","reject","promise","Promise","promiseWithOptionalCallback","callback","then","result","length","catch","error"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/node_modules/@react-native-firebase/app/lib/common/promise.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFunction } from './validate';\n\n/**\n *\n */\nexport function promiseDefer() {\n  const deferred = {\n    resolve: null,\n    reject: null,\n  };\n\n  deferred.promise = new Promise((resolve, reject) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n\n  return deferred;\n}\n\n/**\n * @param promise\n * @param callback\n */\nexport function promiseWithOptionalCallback(promise, callback) {\n  if (!isFunction(callback)) {\n    return promise;\n  }\n\n  return promise\n    .then(result => {\n      if (callback && callback.length === 1) {\n        callback(null);\n      } else if (callback) {\n        callback(null, result);\n      }\n\n      return result;\n    })\n    .catch(error => {\n      if (callback) {\n        callback(error);\n      }\n      return Promise.reject(error);\n    });\n}\n"],"mappings":"AAiBA,SAASA,UAAU;AAKnB,OAAO,SAASC,YAAYA,CAAA,EAAG;EAC7B,IAAMC,QAAQ,GAAG;IACfC,OAAO,EAAE,IAAI;IACbC,MAAM,EAAE;EACV,CAAC;EAEDF,QAAQ,CAACG,OAAO,GAAG,IAAIC,OAAO,CAAC,UAACH,OAAO,EAAEC,MAAM,EAAK;IAClDF,QAAQ,CAACC,OAAO,GAAGA,OAAO;IAC1BD,QAAQ,CAACE,MAAM,GAAGA,MAAM;EAC1B,CAAC,CAAC;EAEF,OAAOF,QAAQ;AACjB;AAMA,OAAO,SAASK,2BAA2BA,CAACF,OAAO,EAAEG,QAAQ,EAAE;EAC7D,IAAI,CAACR,UAAU,CAACQ,QAAQ,CAAC,EAAE;IACzB,OAAOH,OAAO;EAChB;EAEA,OAAOA,OAAO,CACXI,IAAI,CAAC,UAAAC,MAAM,EAAI;IACd,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;MACrCH,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,MAAM,IAAIA,QAAQ,EAAE;MACnBA,QAAQ,CAAC,IAAI,EAAEE,MAAM,CAAC;IACxB;IAEA,OAAOA,MAAM;EACf,CAAC,CAAC,CACDE,KAAK,CAAC,UAAAC,KAAK,EAAI;IACd,IAAIL,QAAQ,EAAE;MACZA,QAAQ,CAACK,KAAK,CAAC;IACjB;IACA,OAAOP,OAAO,CAACF,MAAM,CAACS,KAAK,CAAC;EAC9B,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}