{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useState } from 'react';\nimport { useNavigation } from '@react-navigation/native';\nimport { firebase } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassoword = _useState4[1];\n  loginUser = function () {\n    var _ref = _asyncToGenerator(function* (email, password) {\n      try {\n        yield firebase.auth().signInWithEmailAndPassword(email, password);\n      } catch (error) {\n        alert(error.mesage);\n      }\n    });\n    return function loginUser(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: 26\n      }\n    }), _jsxs(View, {\n      style: {\n        marginTop: 40\n      },\n      children: [_jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"email\",\n        onChangeText: function onChangeText(email) {\n          return setEmail(email);\n        },\n        autoCapitalize: \"none\",\n        autoCorrect: false\n      }), _jsx(TextInput, {\n        style: styles.textInput,\n        placeholder: \"Password\",\n        onChangeText: function onChangeText(password) {\n          return setPassoword(password);\n        },\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        secureTextEntry: true\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return loginUser(email, password);\n      },\n      style: styles.button,\n      children: _jsx(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 22\n        },\n        children: \" Login \"\n      })\n    }), _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return navigation.navigate('Registration');\n      },\n      style: {\n        marginTop: 20\n      },\n      children: _jsx(Text, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: 16\n        },\n        children: \" Nao tem conta, registra \"\n      })\n    })]\n  });\n};\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    marginTop: 100\n  },\n  textInput: {\n    paddingTop: 20,\n    paddingBottom: 10,\n    width: 400,\n    fontSize: 20,\n    borderBottomWidth: 1,\n    borderBottomColor: '#000',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  button: {\n    marginBottom: 50,\n    height: 70,\n    width: 250,\n    backgroundColor: '#026efd',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 50\n  }\n});","map":{"version":3,"names":["React","useState","useNavigation","firebase","jsx","_jsx","jsxs","_jsxs","Login","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassoword","loginUser","_ref","_asyncToGenerator","auth","signInWithEmailAndPassword","error","alert","mesage","_x","_x2","apply","arguments","View","style","styles","container","children","Text","fontWeight","fontSize","marginTop","TextInput","textInput","placeholder","onChangeText","autoCapitalize","autoCorrect","secureTextEntry","TouchableOpacity","onPress","button","navigate","StyleSheet","create","flex","alignItems","paddingTop","paddingBottom","width","borderBottomWidth","borderBottomColor","marginBottom","textAlign","height","backgroundColor","justifyContent","borderRadius"],"sources":["C:/Users/UsuÃ¡rio/Desktop/projeto-mari/adotdogggg/src/Login.js"],"sourcesContent":["import { View, Text, TouchableOpacity,TextInput, StyleSheet} from 'react-native'\r\nimport React,{useState} from 'react'\r\nimport {useNavigation}  from '@react-navigation/native'\r\nimport { firebase } from '../config'\r\n\r\n\r\nconst Login = () => {\r\n    const navigation = useNavigation()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassoword] = useState('')\r\n\r\n    loginUser = async (email, password) => {\r\n        try {\r\n            await firebase.auth().signInWithEmailAndPassword(email,password)\r\n        } catch (error){\r\n            alert(error.mesage)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            <Text style={{fontWeight:'bold', fontSize:26}}></Text>\r\n            <View style={{marginTop:40}}>\r\n                <TextInput\r\n                    style={styles.textInput} \r\n                    placeholder=\"email\" \r\n                    onChangeText={(email) => setEmail(email)}     \r\n                    autoCapitalize='none'  \r\n                    autoCorrect={false}       \r\n                />\r\n                <TextInput\r\n                    style={styles.textInput} \r\n                    placeholder=\"Password\" \r\n                    onChangeText={(password) => setPassoword(password)}     \r\n                    autoCapitalize='none'  \r\n                    autoCorrect={false} \r\n                    secureTextEntry={true}      \r\n                />\r\n            </View>\r\n            <TouchableOpacity\r\n                onPress={() => loginUser(email, password)}\r\n                style={styles.button}\r\n            >\r\n                <Text  style={{fontWeight:'bold',fontSize:22}}> Login </Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n                onPress={() => navigation.navigate('Registration')}\r\n                style={{marginTop:20}}\r\n            >\r\n                <Text  style={{fontWeight:'bold',fontSize:16}}> Nao tem conta, registra </Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    )\r\n  \r\n}\r\n\r\nexport default Login\r\n\r\nconst styles = StyleSheet.create({\r\n    container:{\r\n        flex:1,\r\n        alignItems:'center',\r\n        marginTop:100,\r\n    },\r\n    textInput:{\r\n        paddingTop:20,\r\n        paddingBottom:10,\r\n        width:400,\r\n        fontSize:20,\r\n        borderBottomWidth:1,\r\n        borderBottomColor:'#000',\r\n        marginBottom:20,\r\n        textAlign:'center'\r\n    },\r\n    button:{\r\n        marginBottom:50,\r\n        height:70,\r\n        width:250,\r\n        backgroundColor:'#026efd',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        borderRadius:50,\r\n\r\n\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}