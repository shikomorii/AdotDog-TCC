{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport isEqual from \"lodash.isequal\";\nimport pick from \"lodash.pick\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar TabBarIOS = {\n  Item: function Item() {}\n};\nvar ICON_PROP_NAMES = [\"iconName\", \"iconSize\", \"iconColor\"];\nvar SELECTED_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, [\"selectedIconName\", \"selectedIconColor\"]);\nvar arePropsEqual = function arePropsEqual(keys) {\n  return function (prevProps, nextProps) {\n    return isEqual(pick(prevProps, keys), pick(nextProps, keys));\n  };\n};\nvar areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nvar areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\nexport default function createTabBarItemIOSComponent(IconNamePropType, getImageSource) {\n  var _class;\n  return _class = function (_PureComponent) {\n    _inherits(TabBarItemIOS, _PureComponent);\n    var _super = _createSuper(TabBarItemIOS);\n    function TabBarItemIOS() {\n      var _this;\n      _classCallCheck(this, TabBarItemIOS);\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      _this = _super.call.apply(_super, [this].concat(args));\n      _this.state = {\n        icon: undefined,\n        selectedIcon: undefined\n      };\n      return _this;\n    }\n    _createClass(TabBarItemIOS, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.updateIconSource();\n        this.updateSelectedIconSource();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (!areIconPropsEqual(prevProps, this.props)) {\n          this.updateIconSource();\n        }\n        if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n          this.updateSelectedIconSource();\n        }\n      }\n    }, {\n      key: \"updateIconSource\",\n      value: function updateIconSource() {\n        var _this$props, iconName, iconSize, iconColor, icon;\n        return _regeneratorRuntime.async(function updateIconSource$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = this.props, iconName = _this$props.iconName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor;\n              if (!iconName) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(getImageSource(iconName, iconSize, iconColor));\n            case 4:\n              icon = _context.sent;\n              this.setState({\n                icon: icon\n              });\n              _context.next = 9;\n              break;\n            case 8:\n              if (this.state.icon) {\n                this.setState({\n                  icon: undefined\n                });\n              }\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"updateSelectedIconSource\",\n      value: function updateSelectedIconSource() {\n        var _this$props2, iconName, iconColor, iconSize, selectedIconName, selectedIconColor, selectedIcon;\n        return _regeneratorRuntime.async(function updateSelectedIconSource$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this$props2 = this.props, iconName = _this$props2.iconName, iconColor = _this$props2.iconColor, iconSize = _this$props2.iconSize, selectedIconName = _this$props2.selectedIconName, selectedIconColor = _this$props2.selectedIconColor;\n              if (!(selectedIconName || selectedIconColor)) {\n                _context2.next = 8;\n                break;\n              }\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(getImageSource(selectedIconName || iconName, iconSize, selectedIconColor || iconColor));\n            case 4:\n              selectedIcon = _context2.sent;\n              this.setState({\n                selectedIcon: selectedIcon\n              });\n              _context2.next = 9;\n              break;\n            case 8:\n              if (this.state.selectedIcon) {\n                this.setState({\n                  selectedIcon: undefined\n                });\n              }\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, null, this, null, Promise);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return _jsx(TabBarIOS.Item, _objectSpread(_objectSpread({}, this.state), this.props));\n      }\n    }]);\n    return TabBarItemIOS;\n  }(PureComponent), _class.defaultProps = {\n    iconSize: 30\n  }, _class;\n}","map":{"version":3,"names":["isEqual","pick","React","PureComponent","PropTypes","jsx","_jsx","TabBarIOS","Item","ICON_PROP_NAMES","SELECTED_ICON_PROP_NAMES","concat","arePropsEqual","keys","prevProps","nextProps","areIconPropsEqual","areSelectedIconPropsEqual","createTabBarItemIOSComponent","IconNamePropType","getImageSource","_class","_PureComponent","_inherits","TabBarItemIOS","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","icon","undefined","selectedIcon","_createClass","key","value","componentDidMount","updateIconSource","updateSelectedIconSource","componentDidUpdate","props","_this$props","iconName","iconSize","iconColor","_regeneratorRuntime","async","updateIconSource$","_context","prev","next","awrap","sent","setState","stop","Promise","_this$props2","selectedIconName","selectedIconColor","updateSelectedIconSource$","_context2","render","_objectSpread","defaultProps"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/node_modules/@expo/vector-icons/build/vendor/react-native-vector-icons/lib/tab-bar-item-ios.js"],"sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from \"lodash.isequal\";\nimport pick from \"lodash.pick\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nconst TabBarIOS = {\n  Item: function () {},\n};\n\nconst ICON_PROP_NAMES = [\"iconName\", \"iconSize\", \"iconColor\"];\nconst SELECTED_ICON_PROP_NAMES = [\n  ...ICON_PROP_NAMES,\n  \"selectedIconName\",\n  \"selectedIconColor\",\n];\n\nconst arePropsEqual = (keys) => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areIconPropsEqual = arePropsEqual(ICON_PROP_NAMES);\nconst areSelectedIconPropsEqual = arePropsEqual(SELECTED_ICON_PROP_NAMES);\n\nexport default function createTabBarItemIOSComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class TabBarItemIOS extends PureComponent {\n    static defaultProps = {\n      iconSize: 30,\n    };\n\n    state = {\n      icon: undefined,\n      selectedIcon: undefined,\n    };\n\n    componentDidMount() {\n      this.updateIconSource();\n      this.updateSelectedIconSource();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areIconPropsEqual(prevProps, this.props)) {\n        this.updateIconSource();\n      }\n      if (!areSelectedIconPropsEqual(prevProps, this.props)) {\n        this.updateSelectedIconSource();\n      }\n    }\n\n    async updateIconSource() {\n      const { iconName, iconSize, iconColor } = this.props;\n      if (iconName) {\n        const icon = await getImageSource(iconName, iconSize, iconColor);\n        this.setState({ icon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.icon) {\n        this.setState({ icon: undefined });\n      }\n    }\n\n    async updateSelectedIconSource() {\n      const {\n        iconName,\n        iconColor,\n        iconSize,\n        selectedIconName,\n        selectedIconColor,\n      } = this.props;\n      if (selectedIconName || selectedIconColor) {\n        const selectedIcon = await getImageSource(\n          selectedIconName || iconName,\n          iconSize,\n          selectedIconColor || iconColor\n        );\n        this.setState({ selectedIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.selectedIcon) {\n        this.setState({ selectedIcon: undefined });\n      }\n    }\n\n    render() {\n      return <TabBarIOS.Item {...this.state} {...this.props} />;\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}