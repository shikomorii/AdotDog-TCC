{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { isUndefined } from '@react-native-firebase/app/lib/common';\nvar FirestoreSnapshotMetadata = function () {\n  function FirestoreSnapshotMetadata(metadata) {\n    _classCallCheck(this, FirestoreSnapshotMetadata);\n    this._metadata = metadata;\n  }\n  _createClass(FirestoreSnapshotMetadata, [{\n    key: \"fromCache\",\n    get: function get() {\n      return this._metadata[0];\n    }\n  }, {\n    key: \"hasPendingWrites\",\n    get: function get() {\n      return this._metadata[1];\n    }\n  }, {\n    key: \"isEqual\",\n    value: function isEqual(other) {\n      if (isUndefined(other) || !(other instanceof FirestoreSnapshotMetadata)) {\n        throw new Error(\"firebase.firestore() SnapshotMetadata.isEqual(*) 'other' expected instance of SnapshotMetadata\");\n      }\n      return this.fromCache === other.fromCache && this.hasPendingWrites === other.hasPendingWrites;\n    }\n  }]);\n  return FirestoreSnapshotMetadata;\n}();\nexport { FirestoreSnapshotMetadata as default };","map":{"version":3,"names":["isUndefined","FirestoreSnapshotMetadata","metadata","_classCallCheck","_metadata","_createClass","key","get","value","isEqual","other","Error","fromCache","hasPendingWrites","default"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/node_modules/@react-native-firebase/firestore/lib/FirestoreSnapshotMetadata.js"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isUndefined } from '@react-native-firebase/app/lib/common';\n\nexport default class FirestoreSnapshotMetadata {\n  constructor(metadata) {\n    this._metadata = metadata;\n  }\n\n  get fromCache() {\n    return this._metadata[0];\n  }\n\n  get hasPendingWrites() {\n    return this._metadata[1];\n  }\n\n  isEqual(other) {\n    if (isUndefined(other) || !(other instanceof FirestoreSnapshotMetadata)) {\n      throw new Error(\n        \"firebase.firestore() SnapshotMetadata.isEqual(*) 'other' expected instance of SnapshotMetadata\",\n      );\n    }\n\n    return this.fromCache === other.fromCache && this.hasPendingWrites === other.hasPendingWrites;\n  }\n}\n"],"mappings":";;AAiBA,SAASA,WAAW,QAAQ,uCAAuC;AAAC,IAE/CC,yBAAyB;EAC5C,SAAAA,0BAAYC,QAAQ,EAAE;IAAAC,eAAA,OAAAF,yBAAA;IACpB,IAAI,CAACG,SAAS,GAAGF,QAAQ;EAC3B;EAACG,YAAA,CAAAJ,yBAAA;IAAAK,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAgB;MACd,OAAO,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC;IAC1B;EAAC;IAAAE,GAAA;IAAAC,GAAA,EAED,SAAAA,IAAA,EAAuB;MACrB,OAAO,IAAI,CAACH,SAAS,CAAC,CAAC,CAAC;IAC1B;EAAC;IAAAE,GAAA;IAAAE,KAAA,EAED,SAAAC,QAAQC,KAAK,EAAE;MACb,IAAIV,WAAW,CAACU,KAAK,CAAC,IAAI,EAAEA,KAAK,YAAYT,yBAAyB,CAAC,EAAE;QACvE,MAAM,IAAIU,KAAK,CACb,gGACF,CAAC;MACH;MAEA,OAAO,IAAI,CAACC,SAAS,KAAKF,KAAK,CAACE,SAAS,IAAI,IAAI,CAACC,gBAAgB,KAAKH,KAAK,CAACG,gBAAgB;IAC/F;EAAC;EAAA,OAAAZ,yBAAA;AAAA;AAAA,SArBkBA,yBAAyB,IAAAa,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}