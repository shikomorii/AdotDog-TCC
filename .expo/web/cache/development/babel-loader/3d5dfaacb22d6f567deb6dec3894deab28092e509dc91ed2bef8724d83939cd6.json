{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { getFirestore, collection, getDocs, deleteDoc, doc } from 'firebase/firestore';\nimport { useNavigation } from '@react-navigation/native';\nimport ChatScreen from \"./ChatScreen\";\nimport Icon from \"@expo/vector-icons/Feather\";\nimport { firebase } from \"../config\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Dashboard = function Dashboard() {\n  var navigation = useNavigation();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    userEmail = _useState4[0],\n    setUserEmail = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    isRefreshing = _useState6[0],\n    setIsRefreshing = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    chatVisible = _useState8[0],\n    setChatVisible = _useState8[1];\n  var _useState9 = useState(null),\n    _useState10 = _slicedToArray(_useState9, 2),\n    chatUserEmail = _useState10[0],\n    setChatUserEmail = _useState10[1];\n  var fetchDataFromFirestore = function () {\n    var _ref = _asyncToGenerator(function* () {\n      setIsRefreshing(true);\n      var db = getFirestore();\n      var dataCollection = collection(db, 'idrmp43D1TEUCWZWEHci');\n      try {\n        var querySnapshot = yield getDocs(dataCollection);\n        var newData = [];\n        querySnapshot.forEach(function (doc) {\n          newData.push(_objectSpread({\n            id: doc.id\n          }, doc.data()));\n        });\n        setData(newData);\n      } catch (error) {\n        console.error('Erro ao buscar dados do Firestore:', error);\n      } finally {\n        setIsRefreshing(false);\n      }\n    });\n    return function fetchDataFromFirestore() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    fetchDataFromFirestore();\n    var currentUser = firebase.auth().currentUser;\n    if (currentUser) {\n      setUserEmail(currentUser.email);\n    }\n  }, []);\n  var goToRegistration = function goToRegistration() {\n    navigation.navigate('Registration');\n  };\n  var goToChat = function goToChat(userEmail) {\n    navigation.navigate('ChatScreen', {\n      userEmail: userEmail\n    });\n  };\n  var handleRefresh = function handleRefresh() {\n    fetchDataFromFirestore();\n  };\n  var handleDelete = function () {\n    var _ref2 = _asyncToGenerator(function* (id, postUserEmail) {\n      var currentUser = firebase.auth().currentUser;\n      if (!currentUser) {\n        console.log('Você precisa estar autenticado para excluir esta postagem.');\n        return;\n      }\n      if (currentUser.email === postUserEmail) {\n        var db = getFirestore();\n        var dataDoc = doc(db, 'idrmp43D1TEUCWZWEHci', id);\n        try {\n          yield deleteDoc(dataDoc);\n          console.log('Postagem excluída com sucesso!');\n          fetchDataFromFirestore();\n        } catch (error) {\n          console.error('Erro ao excluir postagem:', error);\n        }\n      } else {\n        console.log('Você não tem permissão para excluir esta postagem.');\n      }\n    });\n    return function handleDelete(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsx(TouchableOpacity, {\n      onPress: goToRegistration,\n      style: styles.iconContainer,\n      children: _jsx(Icon, {\n        name: \"plus\",\n        size: 30,\n        color: \"#fff\"\n      })\n    }), _jsx(Text, {\n      style: styles.heading,\n      onPress: goToRegistration,\n      children: \" AdotDog\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.refreshButton,\n      onPress: handleRefresh,\n      children: isRefreshing ? _jsx(ActivityIndicator, {\n        color: \"#fff\",\n        size: \"small\"\n      }) : _jsx(Icon, {\n        name: \"refresh-cw\",\n        size: 20,\n        color: \"#fff\"\n      })\n    }), _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      renderItem: function renderItem(_ref3) {\n        var item = _ref3.item;\n        return _jsxs(View, {\n          style: styles.feedItem,\n          children: [_jsxs(View, {\n            style: styles.feedHeader,\n            children: [_jsx(Text, {\n              style: styles.username,\n              children: item.userEmail\n            }), userEmail === item.userEmail && _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return handleDelete(item.id, item.userEmail);\n              },\n              children: _jsx(Icon, {\n                name: \"trash-2\",\n                size: 20,\n                color: \"#fff\"\n              })\n            }), userEmail !== item.userEmail && _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                return goToChat(item.userEmail);\n              },\n              children: _jsx(Icon, {\n                name: \"message-circle\",\n                size: 20,\n                color: \"#fff\"\n              })\n            })]\n          }), _jsx(Image, {\n            source: {\n              uri: item.imagemUrl\n            },\n            style: styles.itemImage\n          }), _jsxs(Text, {\n            style: styles.itemText,\n            children: [_jsx(Icon, {\n              name: \"map-pin\",\n              size: 20,\n              color: \"#fff\",\n              style: styles.locationIcon\n            }), \" \", item.cidade]\n          }), _jsxs(Text, {\n            style: styles.itemText,\n            children: [\"Descri\\xE7\\xE3o: \", item.descricao]\n          }), _jsxs(Text, {\n            style: styles.itemText,\n            children: [\"Telefone: \", item.telefone]\n          })]\n        });\n      }\n    }), chatVisible && _jsx(ChatScreen, {\n      userEmail: chatUserEmail\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#000',\n    paddingTop: Platform.OS === 'android' ? 0 : 20\n  },\n  heading: {\n    fontSize: 24,\n    margin: 20,\n    color: '#fff'\n  },\n  iconContainer: {\n    position: 'absolute',\n    top: 50,\n    right: 20\n  },\n  refreshButton: {\n    backgroundColor: '#000',\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    alignSelf: 'flex-end',\n    marginRight: 3,\n    marginBottom: 10\n  },\n  feedItem: {\n    backgroundColor: '#000',\n    borderBottomWidth: 2,\n    borderColor: '#333',\n    padding: 16,\n    marginBottom: 20\n  },\n  feedHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 10\n  },\n  username: {\n    fontSize: 16,\n    fontWeight: 'bold',\n    marginRight: 8,\n    color: '#fff'\n  },\n  itemText: {\n    fontSize: 16,\n    marginVertical: 8,\n    color: '#fff'\n  },\n  itemImage: {\n    width: '100%',\n    height: 200,\n    borderRadius: 8,\n    marginBottom: 8\n  },\n  locationIcon: {\n    marginRight: 8\n  }\n});\nexport default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","View","Text","StyleSheet","FlatList","TouchableOpacity","Image","ActivityIndicator","Platform","SafeAreaView","getFirestore","collection","getDocs","deleteDoc","doc","useNavigation","ChatScreen","Icon","firebase","jsx","_jsx","jsxs","_jsxs","Dashboard","navigation","_useState","_useState2","_slicedToArray","data","setData","_useState3","_useState4","userEmail","setUserEmail","_useState5","_useState6","isRefreshing","setIsRefreshing","_useState7","_useState8","chatVisible","setChatVisible","_useState9","_useState10","chatUserEmail","setChatUserEmail","fetchDataFromFirestore","_ref","_asyncToGenerator","db","dataCollection","querySnapshot","newData","forEach","push","_objectSpread","id","error","console","apply","arguments","currentUser","auth","email","goToRegistration","navigate","goToChat","handleRefresh","handleDelete","_ref2","postUserEmail","log","dataDoc","_x","_x2","style","styles","container","children","onPress","iconContainer","name","size","color","heading","refreshButton","keyExtractor","item","renderItem","_ref3","feedItem","feedHeader","username","source","uri","imagemUrl","itemImage","itemText","locationIcon","cidade","descricao","telefone","create","flex","backgroundColor","paddingTop","OS","fontSize","margin","position","top","right","paddingVertical","paddingHorizontal","borderRadius","alignSelf","marginRight","marginBottom","borderBottomWidth","borderColor","padding","flexDirection","justifyContent","alignItems","fontWeight","marginVertical","width","height"],"sources":["C:/Users/filipe.225221/Downloads/projeto-mari (1)/projeto-mari/adotdogggg/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity, Image, ActivityIndicator, Platform, SafeAreaView } from 'react-native';\r\nimport { getFirestore, collection, getDocs, deleteDoc, doc } from 'firebase/firestore';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport ChatScreen from './ChatScreen';\r\nimport Icon from 'react-native-vector-icons/Feather';\r\nimport { firebase } from '../config';\r\n\r\nconst Dashboard = () => {\r\n  const navigation = useNavigation();\r\n  const [data, setData] = useState([]);\r\n  const [userEmail, setUserEmail] = useState(null);\r\n  const [isRefreshing, setIsRefreshing] = useState(false);\r\n  const [chatVisible, setChatVisible] = useState(false); // Estado para controlar a visibilidade do chat\r\n  const [chatUserEmail, setChatUserEmail] = useState(null); // Estado para armazenar o email do usuário do chat\r\n\r\n  const fetchDataFromFirestore = async () => {\r\n    setIsRefreshing(true);\r\n\r\n    const db = getFirestore();\r\n    const dataCollection = collection(db, 'idrmp43D1TEUCWZWEHci');\r\n    try {\r\n      const querySnapshot = await getDocs(dataCollection);\r\n      const newData = [];\r\n      querySnapshot.forEach((doc) => {\r\n        newData.push({ id: doc.id, ...doc.data() });\r\n      });\r\n      setData(newData);\r\n    } catch (error) {\r\n      console.error('Erro ao buscar dados do Firestore:', error);\r\n    } finally {\r\n      setIsRefreshing(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDataFromFirestore();\r\n    const currentUser = firebase.auth().currentUser;\r\n\r\n    if (currentUser) {\r\n      setUserEmail(currentUser.email);\r\n    }\r\n  }, []);\r\n\r\n  const goToRegistration = () => {\r\n    navigation.navigate('Registration');\r\n  };\r\n\r\n  const goToChat = (userEmail) => {\r\n    navigation.navigate('ChatScreen', { userEmail });\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    fetchDataFromFirestore();\r\n  };\r\n\r\n  const handleDelete = async (id, postUserEmail) => {\r\n    const currentUser = firebase.auth().currentUser;\r\n\r\n    if (!currentUser) {\r\n      console.log('Você precisa estar autenticado para excluir esta postagem.');\r\n      return;\r\n    }\r\n\r\n    if (currentUser.email === postUserEmail) {\r\n      const db = getFirestore();\r\n      const dataDoc = doc(db, 'idrmp43D1TEUCWZWEHci', id);\r\n\r\n      try {\r\n        await deleteDoc(dataDoc);\r\n        console.log('Postagem excluída com sucesso!');\r\n        fetchDataFromFirestore();\r\n      } catch (error) {\r\n        console.error('Erro ao excluir postagem:', error);\r\n      }\r\n    } else {\r\n      console.log('Você não tem permissão para excluir esta postagem.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <TouchableOpacity onPress={goToRegistration} style={styles.iconContainer}>\r\n        <Icon name=\"plus\" size={30} color=\"#fff\" />\r\n      </TouchableOpacity>\r\n\r\n      <Text style={styles.heading} onPress={goToRegistration}> AdotDog</Text>\r\n\r\n      <TouchableOpacity style={styles.refreshButton} onPress={handleRefresh}>\r\n        {isRefreshing ? (\r\n          <ActivityIndicator color=\"#fff\" size=\"small\" />\r\n        ) : (\r\n          <Icon name=\"refresh-cw\" size={20} color=\"#fff\" />\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      <FlatList\r\n        data={data}\r\n        keyExtractor={(item) => item.id}\r\n        renderItem={({ item }) => (\r\n          <View style={styles.feedItem}>\r\n            <View style={styles.feedHeader}>\r\n              <Text style={styles.username}>{item.userEmail}</Text>\r\n              {userEmail === item.userEmail && (\r\n                <TouchableOpacity onPress={() => handleDelete(item.id, item.userEmail)}>\r\n                  <Icon name=\"trash-2\" size={20} color=\"#fff\" />\r\n                </TouchableOpacity>\r\n              )}\r\n\r\n              {/* Botão de chat */}\r\n              {userEmail !== item.userEmail && (\r\n                <TouchableOpacity onPress={() => goToChat(item.userEmail)}>\r\n                  <Icon name=\"message-circle\" size={20} color=\"#fff\" />\r\n                </TouchableOpacity>\r\n              )}\r\n            </View>\r\n\r\n            {/* Detalhes da publicação */}\r\n            <Image source={{ uri: item.imagemUrl }} style={styles.itemImage} />\r\n            <Text style={styles.itemText}>\r\n              <Icon name=\"map-pin\" size={20} color=\"#fff\" style={styles.locationIcon} /> {item.cidade}\r\n            </Text>\r\n            <Text style={styles.itemText}>Descrição: {item.descricao}</Text>\r\n            <Text style={styles.itemText}>Telefone: {item.telefone}</Text>\r\n          </View>\r\n        )}\r\n      />\r\n\r\n      {/* Adicione este trecho para exibir a tela de chat */}\r\n      {chatVisible && (\r\n        <ChatScreen userEmail={chatUserEmail} />\r\n      )}\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#000',\r\n    paddingTop: Platform.OS === 'android' ? 0 : 20,\r\n  },\r\n  heading: {\r\n    fontSize: 24,\r\n    margin: 20,\r\n    color: '#fff',\r\n  },\r\n  iconContainer: {\r\n    position: 'absolute',\r\n    top: 50,\r\n    right: 20,\r\n  },\r\n  refreshButton: {\r\n    backgroundColor: '#000',\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n    alignSelf: 'flex-end',\r\n    marginRight: 3,\r\n    marginBottom: 10,\r\n  },\r\n  feedItem: {\r\n    backgroundColor: '#000',\r\n    borderBottomWidth: 2,\r\n    borderColor: '#333',\r\n    padding: 16,\r\n    marginBottom: 20,\r\n  },\r\n  feedHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  username: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    marginRight: 8,\r\n    color: '#fff',\r\n  },\r\n  itemText: {\r\n    fontSize: 16,\r\n    marginVertical: 8,\r\n    color: '#fff',\r\n  },\r\n  itemImage: {\r\n    width: '100%',\r\n    height: 200,\r\n    borderRadius: 8,\r\n    marginBottom: 8,\r\n  },\r\n  locationIcon: {\r\n    marginRight: 8,\r\n  },\r\n});\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}